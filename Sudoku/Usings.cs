global using System.Collections.Generic;
global using System.Collections.Immutable;
global using System.Linq;
global using GridPuzzles;
global using GridPuzzles.Bifurcation;
global using GridPuzzles.Cells;
global using GridPuzzles.Clues;
global using GridPuzzles.Reasons;
global using System.Drawing;
global using CSharpFunctionalExtensions;
global using Generator.Equals;
global using GridPuzzles.Clues.Constraints;
global using GridPuzzles.Overlays;
global using GridPuzzles.VariantBuilderArguments;
global using MoreLinq;
global using Grid = GridPuzzles.Grid<int, GridPuzzles.Cells.IntCell>;
global using IRuleClue = GridPuzzles.Clues.IRuleClue<int, GridPuzzles.Cells.IntCell>;
global using IMetaClue = GridPuzzles.Clues.IMetaClue<int, GridPuzzles.Cells.IntCell>;
global using IRelationshipClue = GridPuzzles.Clues.IRelationshipClue<int, GridPuzzles.Cells.IntCell>;
global using ICompletenessClue = GridPuzzles.Clues.ICompletenessClue<int, GridPuzzles.Cells.IntCell>;
global using IUniquenessClue = GridPuzzles.Clues.IUniquenessClue<int, GridPuzzles.Cells.IntCell>;
global using RelationshipClue = GridPuzzles.Clues.RelationshipClue<int, GridPuzzles.Cells.IntCell>;
global using VariantBuilder = GridPuzzles.Clues.VariantBuilder<int, GridPuzzles.Cells.IntCell>;
global using VariantBuilderArgumentPair = GridPuzzles.VariantBuilderArguments.VariantBuilderArgumentPair<int, GridPuzzles.Cells.IntCell>;
global using NoArgumentVariantBuilder = GridPuzzles.Clues.NoArgumentVariantBuilder<int, GridPuzzles.Cells.IntCell>;
global using IValueSource = GridPuzzles.Clues.IValueSource<int, GridPuzzles.Cells.IntCell>;
global using IClueBuilder = GridPuzzles.Clues.IClueBuilder<int, GridPuzzles.Cells.IntCell>;
global using IVariantBuilder = GridPuzzles.IVariantBuilder<int, GridPuzzles.Cells.IntCell>;
global using IBifurcationOption = GridPuzzles.Bifurcation.IBifurcationOption<int, GridPuzzles.Cells.IntCell>;
global using IBifurcationChoice = GridPuzzles.Bifurcation.IBifurcationChoice<int, GridPuzzles.Cells.IntCell>;
global using ClueSource = GridPuzzles.Clues.ClueSource<int, GridPuzzles.Cells.IntCell>;
global using UpdateResult = GridPuzzles.UpdateResult<int, GridPuzzles.Cells.IntCell>;
global using UpdateResultCombiner = GridPuzzles.UpdateResultCombiner<int, GridPuzzles.Cells.IntCell>;